{
  "name": "grunt-mustache-render",
  "description": "Render mustache templates",
  "version": "1.2.4",
  "homepage": "http://projects.the5thwall.net/mustache-render",
  "author": {
    "name": "Andy Arminio",
    "email": "5thWall@gmail.com",
    "url": "http://blog.the5thwall.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/5thWall/mustache-render.git"
  },
  "bugs": {
    "url": "https://github.com/5thWall/mustache-render/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/5thWall/mustache-render/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "dependencies": {
    "mustache": "~0.7.2"
  },
  "keywords": [
    "gruntplugin",
    "mustache"
  ],
  "readme": "# grunt-mustache-render v1.2.3\n\n[![Build Status](https://travis-ci.org/5thWall/mustache-render.png?branch=master)](https://travis-ci.org/5thWall/mustache-render)\n[![NPM version](https://badge.fury.io/js/grunt-mustache-render.png)](http://badge.fury.io/js/grunt-mustache-render)\n\nThis is a grunt plugin to render [mustache](http://mustache.github.io/) templates. It takes data in `JSON`, `YAML`, or `POJO` (Plain Ol' JavaScript Object) format. It allows you to specify a folder for partials, instead of needing to list them individually.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-mustache-render --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-mustache-render');\n```\n\n## The \"mustache_render\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `mustache_render` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  mustache_render: {\n    options: {\n      // Task global options go here\n    },\n    your_target: {\n      options: {\n        // Target specific options go here\n      },\n      files : [\n        {\n          data: // Path to JSON or YAML file, or POJO\n          template: // Path to template file\n          dest: // Path to output destination here\n        }\n      ]\n    },\n  },\n})\n```\n**Note:** The `files` parameter _must_ be an array, and _must_ conform to the format specified above. Each object in the file array represents _one_ rendered template. Data files can be in either `JSON` or `YAML` format or as a `POJO` (Plain Ol' JavaScript Object).\n\n#### Examples:\n\n```js\nfiles: [\n  {data: \"path/to/data/file.json\",\n   template: \"path/to/template.mustache\",\n   dest: \"file/to/output.html\"}\n]\n```\n\n```js\nfiles: [\n  {data: { greeting: \"Hello\", target: \"world\" },\n   template: \"path/to/template.mustache\",\n   dest: \"file/to/output.html\"}\n]\n```\n\n### Options\n\n#### options.directory\nType: `String`  \nDefault value: `\"\"`\n\nPath to the directory in which partials can be found. Partials are looked up by name in this directory.\n\n#### options.extension\nType: `String`  \nDefault value: `\".mustache\"`\n\n`mustache-render` will use this extension when looking up partials.\n\n#### options.prefix\nType: `String`  \nDefault value: `\"\"`\n\n`mustache-render` will use this as a common prefix when looking up partials. So given the prefix: `part_` for a partial named `hello` it will search for a file named `part_hello.mustache`.\n\n#### options.clear_cache\nType: `Boolean`  \nDefault value: `false`\n\nClears the mustache cache before running the target. Mustache will cache partials by name when running multiple tasks, so this option is usefull if `options.extension`, `options.directory`, or `options.prefix` have been changed between tasks.\n\n### Usage Examples\n\nFor this Grunt config:\n\n```js\ngrunt.initConfig({\n  mustache_render: {\n    all: {\n      files: [{\n        data: \"data/hello_world.json\",\n        template: \"templates/hello_world.mustache\",\n        dest: \"public/hello_world.html\"\n      }]\n    }\n  }\n})\n```\n\nAnd this `json`:\n\n```js\n{\n  \"greeting\" : \"Hello\",\n  \"target\" : \"World\"\n}\n```\n\nThis template:\n\n```html\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>A greeting</title>\n</head>\n<body>\n  <h1>{{greeting}}, {{target}}!</h1>\n</body>\n</html>\n```\n\nWill produce this output:\n\n```html\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>A greeting</title>\n</head>\n<body>\n  <h1>Hello, World!</h1>\n</body>\n</html>\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n__1.2.3__\n\n * Accept `YAML` files with either `.yaml` or `.yml` extensions.\n\n__1.2.2__\n\n * Major code refactor\n * Remove `lodash` dependency\n\n__1.2.1__\n\n * Code Cleanup\n\n__1.2.0__\n\n * Allow arbitrary JavaScript objects to be passed as data\n\n__1.1.0__\n\n * Option for common prefix on partials\n * Option to clear mustache cache before running task\n\n__1.0.0__\n\n * Created website\n * API now considered stable\n\n__0.3.0__\n\n * Unverbosify options\n\n__0.2.1__\n\n * Bugfix: dependencies\n\n__0.2.0__\n\n * `YAML` data file support\n\n__0.1.0__\n\n * Initial Release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mustache-render@1.2.4",
  "dist": {
    "shasum": "c48096e4afc898b432512747c72b6e7f0f76bf82"
  },
  "_from": "grunt-mustache-render@",
  "_resolved": "http://registry.npmjs.org/grunt-mustache-render/-/grunt-mustache-render-1.2.4.tgz"
}
