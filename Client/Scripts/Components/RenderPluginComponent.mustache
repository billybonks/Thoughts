'use strict';
App.RenderPluginComponent = Ember.Component.extend({
  {{#plugins}}
  is{{name}}:Ember.computed.equal('model.type', '{{name}}'),
  {{/plugins}}
  configuration:function(){
     var parentId = parseInt(this.get('parent.id'));
     var configs = this.get('model.configurations');
     return configs.find(function(item, index, enumerable){
       var f = item.get('for')
       if(f === parentId){
         return true;
       }
     },configs)
  }.property('model.configurations.@each.for'),
  actions:{
  },
  FowardNotification:function(message,level){
    this.get('targetObject').FowardNotification(message,level);
  },
  openModal:function(modalName,model,secondaryModel){
    return this.get('targetObject').openPluginModal(modalName,model,secondaryModel);
  },
  StartLoading:function(){
    this.get('targetObject').set('isLoading',true);
  },
  StopLoading:function(){
    this.get('targetObject').set('isLoading',false);
  },
  isEmbedded:function(){
    var configuration = this.get('configuration')
    if(configuration){
      console.log(configuration)
      return configuration.get('embedded');
    }else{
      return false;
    }
  }.property('configuration')
});

/*

*/